```{r echo=TRUE}
library(DBI)
con_nycflight13 = con_nycflight13 <- dbConnect(odbc::odbc(), dsn = "nycflights13")
```


```{sql}
#| connection: con_nycflight13

WITH airport_destinations AS (
    SELECT origin AS airport_code, COUNT(DISTINCT dest) AS num_destinations
    FROM flights
    WHERE origin IN ('JFK', 'LGA', 'EWR')
    GROUP BY origin
),
ranked_airports AS (
    SELECT airport_code, num_destinations,
           RANK() OVER (ORDER BY num_destinations DESC, airport_code) AS rank
    FROM airport_destinations
)
SELECT ra.airport_code, air.name, ra.num_destinations, ra.rank
FROM ranked_airports AS ra
INNER JOIN airports AS air
ON ra.airport_code = air.faa
ORDER BY ra.rank, ra.airport_code;


```

#top 10
```{sql}
#| connection: con_nycflight13

WITH airport_destinations AS (
    SELECT dest AS airport_code, SUM(seats) AS num_seats
    FROM flights
    INNER JOIN planes
    ON flights.tailnum = planes.tailnum
    WHERE origin IN ('JFK', 'LGA', 'EWR')
    GROUP BY dest
),
ranked_airports AS (
    SELECT airport_code, num_seats,
           RANK() OVER (ORDER BY num_seats DESC, airport_code) AS rank
    FROM airport_destinations
)
SELECT ra.airport_code, air.name, ra.num_seats, ra.rank
FROM ranked_airports AS ra
INNER JOIN airports AS air
ON ra.airport_code = air.faa
WHERE ra.rank <= 10
ORDER BY ra.rank, ra.airport_code;
```

```{sql}
#| connection: con_nycflight13

WITH airport_destinations AS (
    SELECT dest AS airport_code, COUNT(*) AS num_flights
    FROM flights
    WHERE origin = 'JFK'
    GROUP BY dest
),
ranked_airports AS (
    SELECT airport_code, num_flights,
           RANK() OVER (ORDER BY num_flights DESC, airport_code) AS rank
    FROM airport_destinations
)
SELECT ra.airport_code, air.name, ra.num_flights, ra.rank
FROM ranked_airports AS ra
INNER JOIN airports AS air
ON ra.airport_code = air.faa
WHERE ra.rank <= 10
ORDER BY ra.rank, ra.airport_code;
```

```{sql}
#| connection: con_nycflight13

WITH delayed_flights AS (
    SELECT *
    FROM flights
    WHERE dep_delay >= 30
),
on_time_flights AS (
    SELECT *
    FROM delayed_flights
    WHERE arr_delay <= 0
)
SELECT ROUND(100.0 * COUNT(*) / (SELECT COUNT(*) FROM delayed_flights), 2) AS percentage_on_time
FROM on_time_flights;
```


```{sql}
#| connection: con_nycflight13

WITH flight_speeds AS (
    SELECT tailnum, AVG(distance / air_time * 60) AS mean_speed
    FROM flights
    WHERE origin IN ('JFK', 'LGA', 'EWR') AND air_time IS NOT NULL
    GROUP BY tailnum
    HAVING COUNT(*) >= 10
),
ranked_speeds AS (
    SELECT tailnum, mean_speed,
           RANK() OVER (ORDER BY mean_speed DESC, tailnum) AS rank
    FROM flight_speeds
)
SELECT rs.tailnum, pl.manufacturer, pl.model, rs.mean_speed, rs.rank
FROM ranked_speeds AS rs
INNER JOIN planes AS pl
ON rs.tailnum = pl.tailnum
WHERE rs.rank <= 10
ORDER BY rs.rank, rs.tailnum;

```

#Which airport names in the airports table contain the string 'Chicago'? Create a view named chicago_airports to save the result, including only the faa and name columns.
```{sql}
#| connection: con_nycflight13

CREATE VIEW chicago_airports AS (
    SELECT faa, name
    FROM airports
    WHERE name ILIKE '%Chicago%'
);
```

#How many flights departed from New York City to each of Chicagoâ€™s airports? Include columns for the following attributes:

#Three-letter code of the destination airport
#Name of the destination airport
#Number of flights
#Rank
#Sort the results first by rank and, then, alphabetically by the three-letter code of the destination airport.
```{sql}
#| connection: con_nycflight13

WITH chicago_flights AS (
    SELECT dest AS airport_code, COUNT(*) AS num_flights
    FROM flights
    WHERE origin IN ('JFK', 'LGA', 'EWR') AND dest IN (SELECT faa FROM chicago_airports)
    GROUP BY dest
),
ranked_airports AS (
    SELECT airport_code, num_flights,
           RANK() OVER (ORDER BY num_flights DESC, airport_code) AS rank
    FROM chicago_flights
)
SELECT ra.airport_code, ca.name, ra.num_flights, ra.rank
FROM ranked_airports AS ra
INNER JOIN chicago_airports AS ca
ON ra.airport_code = ca.faa
ORDER BY ra.rank, ra.airport_code;

```

#Which airlines operated flights from New York City to Chicago? Include columns for the following attributes:

#Two-letter airline code
Airline name
Number of flights
Rank

```{sql}
#| connection: con_nycflight13

WITH chicago_airlines AS (
    SELECT carrier AS airline_code, COUNT(*) AS num_flights
    FROM flights
    WHERE origin IN ('JFK', 'LGA', 'EWR') AND dest IN (SELECT faa FROM chicago_airports)
    GROUP BY carrier
),

ranked_airlines AS (
    SELECT airline_code, num_flights,
           RANK() OVER (ORDER BY num_flights DESC, airline_code) AS rank
    FROM chicago_airlines
)
SELECT ra.airline_code, air.name, ra.num_flights, ra.rank
FROM ranked_airlines AS ra
INNER JOIN airlines AS air
ON ra.airline_code = air.carrier
ORDER BY ra.rank, ra.airline_code;
```

#What were the ten most frequent combinations of manufacturer and model used for flights from New York City to Chicago? If manufacturer-model combinations are tied for the tenth place, incorporate all of them in the output. Include columns for each of the following attributes:

#Manufacturer
#Model
#Number of flights
#Rank
#Sort by rank, then alphabetically by manufacturer, and, lastly, by model.

```{sql}
#| connection: con_nycflight13

WITH nyc_to_chicago_flights AS (
    SELECT fl.tailnum, COUNT(*) AS num_flights
    FROM flights AS fl
    WHERE origin IN ('JFK', 'LGA', 'EWR') AND dest IN (SELECT faa FROM chicago_airports)
    GROUP BY fl.tailnum
),
manufacturer_model_counts AS (
    SELECT pl.manufacturer, pl.model, SUM(ncf.num_flights) AS total_flights
    FROM nyc_to_chicago_flights AS ncf
    INNER JOIN planes AS pl ON ncf.tailnum = pl.tailnum
    GROUP BY pl.manufacturer, pl.model
),
ranked_combinations AS (
    SELECT manufacturer, model, total_flights,
           RANK() OVER (ORDER BY total_flights DESC, manufacturer, model) AS rank
    FROM manufacturer_model_counts
)
SELECT rc.manufacturer, rc.model, rc.total_flights, rc.rank
FROM ranked_combinations AS rc
WHERE rc.rank <= 10
ORDER BY rc.rank, rc.manufacturer, rc.model;
```

For each combination of origin airport in New York City and destination airport in Chicago, what was the total number of available seats during 2013? Include columns for the following attributes:

Three-letter code of the origin airport
Name of the origin airport
Three-letter code of the destination airport
Name of the destination airport
Number of seats
Rank
Sort the results first by the number of seats, then alphabetically by the three-letter code of the origin airport, and, lastly, by the three-letter code of the destination airport. Hint: use INNER JOIN combined with AS wisely.

```{sql}
#| connection: con_nycflight13

WITH nyc_to_chicago_seats AS (
    SELECT fl.origin, fl.dest, SUM(pl.seats) AS total_seats
    FROM flights AS fl
    INNER JOIN planes AS pl ON fl.tailnum = pl.tailnum
    WHERE fl.origin IN ('JFK', 'LGA', 'EWR') AND fl.dest IN (SELECT faa FROM chicago_airports)
    GROUP BY fl.origin, fl.dest
),
ranked_combinations AS (
    SELECT origin, dest, total_seats,
           RANK() OVER (ORDER BY total_seats DESC, origin, dest) AS rank
    FROM nyc_to_chicago_seats
)
SELECT rc.origin, ao.name AS origin_name, rc.dest, ad.name AS dest_name, rc.total_seats, rc.rank
FROM ranked_combinations AS rc
INNER JOIN airports AS ao ON rc.origin = ao.faa
INNER JOIN chicago_airports AS ad ON rc.dest = ad.faa
ORDER BY rc.rank, rc.origin, rc.dest;
```

